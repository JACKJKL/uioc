{
  "type": "File",
  "start": 0,
  "end": 4419,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 161,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 4419,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 161,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ClassDeclaration",
        "start": 57,
        "end": 1976,
        "loc": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 1
          }
        },
        "id": {
          "type": "Identifier",
          "start": 63,
          "end": 78,
          "loc": {
            "start": {
              "line": 10,
              "column": 6
            },
            "end": {
              "line": 10,
              "column": 21
            },
            "identifierName": "ILifeCircleHook"
          },
          "name": "ILifeCircleHook",
          "leadingComments": null
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "start": 79,
          "end": 1976,
          "loc": {
            "start": {
              "line": 10,
              "column": 22
            },
            "end": {
              "line": 85,
              "column": 1
            }
          },
          "body": [
            {
              "type": "ClassMethod",
              "start": 142,
              "end": 209,
              "loc": {
                "start": {
                  "line": 16,
                  "column": 4
                },
                "end": {
                  "line": 18,
                  "column": 5
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 146,
                "end": 150,
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 8
                  },
                  "end": {
                    "line": 16,
                    "column": 12
                  },
                  "identifierName": "name"
                },
                "name": "name"
              },
              "static": false,
              "kind": "get",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 153,
                "end": 209,
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 15
                  },
                  "end": {
                    "line": 18,
                    "column": 5
                  }
                },
                "body": [
                  {
                    "type": "ThrowStatement",
                    "start": 163,
                    "end": 203,
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 8
                      },
                      "end": {
                        "line": 17,
                        "column": 48
                      }
                    },
                    "argument": {
                      "type": "NewExpression",
                      "start": 169,
                      "end": 202,
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 14
                        },
                        "end": {
                          "line": 17,
                          "column": 47
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 173,
                        "end": 178,
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 18
                          },
                          "end": {
                            "line": 17,
                            "column": 23
                          },
                          "identifierName": "Error"
                        },
                        "name": "Error"
                      },
                      "arguments": [
                        {
                          "type": "StringLiteral",
                          "start": 179,
                          "end": 201,
                          "loc": {
                            "start": {
                              "line": 17,
                              "column": 24
                            },
                            "end": {
                              "line": 17,
                              "column": 46
                            }
                          },
                          "extra": {
                            "rawValue": "need to be implement",
                            "raw": "'need to be implement'"
                          },
                          "value": "need to be implement"
                        }
                      ]
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 插件名称\n     *\n     * @type {string}\n     ",
                  "start": 85,
                  "end": 137,
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 4
                    },
                    "end": {
                      "line": 15,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 容器实例化时调用，传入 ioc 容器和当前配置作为参数, 可以在此拦截容器级的配置，\n     * 返回一个新的容器级配置提供给 ioc 使用, ioc将基于新的配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {IoCConfig} iocConfig 容器配置\n     *\n     * @return {IoCConfig} 扩展后的 ioc 容器配置\n     ",
                  "start": 215,
                  "end": 450,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 455,
              "end": 489,
              "loc": {
                "start": {
                  "line": 29,
                  "column": 4
                },
                "end": {
                  "line": 29,
                  "column": 38
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 455,
                "end": 470,
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 4
                  },
                  "end": {
                    "line": 29,
                    "column": 19
                  },
                  "identifierName": "onContainerInit"
                },
                "name": "onContainerInit",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 471,
                  "end": 474,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 20
                    },
                    "end": {
                      "line": 29,
                      "column": 23
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                },
                {
                  "type": "Identifier",
                  "start": 476,
                  "end": 485,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 25
                    },
                    "end": {
                      "line": 29,
                      "column": 34
                    },
                    "identifierName": "iocConfig"
                  },
                  "name": "iocConfig"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 487,
                "end": 489,
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 36
                  },
                  "end": {
                    "line": 29,
                    "column": 38
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 容器实例化时调用，传入 ioc 容器和当前配置作为参数, 可以在此拦截容器级的配置，\n     * 返回一个新的容器级配置提供给 ioc 使用, ioc将基于新的配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {IoCConfig} iocConfig 容器配置\n     *\n     * @return {IoCConfig} 扩展后的 ioc 容器配置\n     ",
                  "start": 215,
                  "end": 450,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 注册组件时调用，传入 ioc 容器，当前组件 id ，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前待添加的组件 id\n     * @param {ComponentConfig} componentConfig 当前待添加的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
                  "start": 495,
                  "end": 793,
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 4
                    },
                    "end": {
                      "line": 40,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 798,
              "end": 850,
              "loc": {
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 41,
                  "column": 56
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 798,
                "end": 812,
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 4
                  },
                  "end": {
                    "line": 41,
                    "column": 18
                  },
                  "identifierName": "onAddComponent"
                },
                "name": "onAddComponent",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 813,
                  "end": 816,
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 19
                    },
                    "end": {
                      "line": 41,
                      "column": 22
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                },
                {
                  "type": "Identifier",
                  "start": 818,
                  "end": 829,
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 24
                    },
                    "end": {
                      "line": 41,
                      "column": 35
                    },
                    "identifierName": "componentId"
                  },
                  "name": "componentId"
                },
                {
                  "type": "Identifier",
                  "start": 831,
                  "end": 846,
                  "loc": {
                    "start": {
                      "line": 41,
                      "column": 37
                    },
                    "end": {
                      "line": 41,
                      "column": 52
                    },
                    "identifierName": "componentConfig"
                  },
                  "name": "componentConfig"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 848,
                "end": 850,
                "loc": {
                  "start": {
                    "line": 41,
                    "column": 54
                  },
                  "end": {
                    "line": 41,
                    "column": 56
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 注册组件时调用，传入 ioc 容器，当前组件 id ，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前待添加的组件 id\n     * @param {ComponentConfig} componentConfig 当前待添加的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
                  "start": 495,
                  "end": 793,
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 4
                    },
                    "end": {
                      "line": 40,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 获取组件时调用，传入 ioc 容器，当前组件 id，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前要获取的组件 id\n     * @param {ComponentConfig} componentConfig 当前要获取的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
                  "start": 856,
                  "end": 1153,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 4
                    },
                    "end": {
                      "line": 52,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1158,
              "end": 1210,
              "loc": {
                "start": {
                  "line": 53,
                  "column": 4
                },
                "end": {
                  "line": 53,
                  "column": 56
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1158,
                "end": 1172,
                "loc": {
                  "start": {
                    "line": 53,
                    "column": 4
                  },
                  "end": {
                    "line": 53,
                    "column": 18
                  },
                  "identifierName": "onGetComponent"
                },
                "name": "onGetComponent",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1173,
                  "end": 1176,
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 19
                    },
                    "end": {
                      "line": 53,
                      "column": 22
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                },
                {
                  "type": "Identifier",
                  "start": 1178,
                  "end": 1189,
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 24
                    },
                    "end": {
                      "line": 53,
                      "column": 35
                    },
                    "identifierName": "componentId"
                  },
                  "name": "componentId"
                },
                {
                  "type": "Identifier",
                  "start": 1191,
                  "end": 1206,
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 37
                    },
                    "end": {
                      "line": 53,
                      "column": 52
                    },
                    "identifierName": "componentConfig"
                  },
                  "name": "componentConfig"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1208,
                "end": 1210,
                "loc": {
                  "start": {
                    "line": 53,
                    "column": 54
                  },
                  "end": {
                    "line": 53,
                    "column": 56
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 获取组件时调用，传入 ioc 容器，当前组件 id，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前要获取的组件 id\n     * @param {ComponentConfig} componentConfig 当前要获取的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
                  "start": 856,
                  "end": 1153,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 4
                    },
                    "end": {
                      "line": 52,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 创建组件实例前调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例(可能没有)，\n     * 返回一个值为实例的 promise 给 ioc 使用，若不想覆盖现有实例，则直接返回一个 Promise<instance>。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} [instance] 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
                  "start": 1216,
                  "end": 1506,
                  "loc": {
                    "start": {
                      "line": 55,
                      "column": 4
                    },
                    "end": {
                      "line": 64,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1511,
              "end": 1562,
              "loc": {
                "start": {
                  "line": 65,
                  "column": 4
                },
                "end": {
                  "line": 65,
                  "column": 55
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1511,
                "end": 1531,
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 4
                  },
                  "end": {
                    "line": 65,
                    "column": 24
                  },
                  "identifierName": "beforeCreateInstance"
                },
                "name": "beforeCreateInstance",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1532,
                  "end": 1535,
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 25
                    },
                    "end": {
                      "line": 65,
                      "column": 28
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                },
                {
                  "type": "Identifier",
                  "start": 1537,
                  "end": 1548,
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 30
                    },
                    "end": {
                      "line": 65,
                      "column": 41
                    },
                    "identifierName": "componentId"
                  },
                  "name": "componentId"
                },
                {
                  "type": "Identifier",
                  "start": 1550,
                  "end": 1558,
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 43
                    },
                    "end": {
                      "line": 65,
                      "column": 51
                    },
                    "identifierName": "instance"
                  },
                  "name": "instance"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1560,
                "end": 1562,
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 53
                  },
                  "end": {
                    "line": 65,
                    "column": 55
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 创建组件实例前调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例(可能没有)，\n     * 返回一个值为实例的 promise 给 ioc 使用，若不想覆盖现有实例，则直接返回一个 Promise<instance>。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} [instance] 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
                  "start": 1216,
                  "end": 1506,
                  "loc": {
                    "start": {
                      "line": 55,
                      "column": 4
                    },
                    "end": {
                      "line": 64,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 创建组件实例后调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例，\n     * 返回一个值为实例的 promise 给 ioc 使用。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} instance 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
                  "start": 1568,
                  "end": 1814,
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 4
                    },
                    "end": {
                      "line": 76,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1819,
              "end": 1869,
              "loc": {
                "start": {
                  "line": 77,
                  "column": 4
                },
                "end": {
                  "line": 77,
                  "column": 54
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1819,
                "end": 1838,
                "loc": {
                  "start": {
                    "line": 77,
                    "column": 4
                  },
                  "end": {
                    "line": 77,
                    "column": 23
                  },
                  "identifierName": "afterCreateInstance"
                },
                "name": "afterCreateInstance",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1839,
                  "end": 1842,
                  "loc": {
                    "start": {
                      "line": 77,
                      "column": 24
                    },
                    "end": {
                      "line": 77,
                      "column": 27
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                },
                {
                  "type": "Identifier",
                  "start": 1844,
                  "end": 1855,
                  "loc": {
                    "start": {
                      "line": 77,
                      "column": 29
                    },
                    "end": {
                      "line": 77,
                      "column": 40
                    },
                    "identifierName": "componentId"
                  },
                  "name": "componentId"
                },
                {
                  "type": "Identifier",
                  "start": 1857,
                  "end": 1865,
                  "loc": {
                    "start": {
                      "line": 77,
                      "column": 42
                    },
                    "end": {
                      "line": 77,
                      "column": 50
                    },
                    "identifierName": "instance"
                  },
                  "name": "instance"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1867,
                "end": 1869,
                "loc": {
                  "start": {
                    "line": 77,
                    "column": 52
                  },
                  "end": {
                    "line": 77,
                    "column": 54
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * 创建组件实例后调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例，\n     * 返回一个值为实例的 promise 给 ioc 使用。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} instance 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
                  "start": 1568,
                  "end": 1814,
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 4
                    },
                    "end": {
                      "line": 76,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * ioc 容器销毁时调用\n     *\n     * @param {IoC} ioc ioc 实例\n     ",
                  "start": 1875,
                  "end": 1943,
                  "loc": {
                    "start": {
                      "line": 79,
                      "column": 4
                    },
                    "end": {
                      "line": 83,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1948,
              "end": 1974,
              "loc": {
                "start": {
                  "line": 84,
                  "column": 4
                },
                "end": {
                  "line": 84,
                  "column": 30
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1948,
                "end": 1966,
                "loc": {
                  "start": {
                    "line": 84,
                    "column": 4
                  },
                  "end": {
                    "line": 84,
                    "column": 22
                  },
                  "identifierName": "onContainerDispose"
                },
                "name": "onContainerDispose",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1967,
                  "end": 1970,
                  "loc": {
                    "start": {
                      "line": 84,
                      "column": 23
                    },
                    "end": {
                      "line": 84,
                      "column": 26
                    },
                    "identifierName": "ioc"
                  },
                  "name": "ioc"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1972,
                "end": 1974,
                "loc": {
                  "start": {
                    "line": 84,
                    "column": 28
                  },
                  "end": {
                    "line": 84,
                    "column": 30
                  }
                },
                "body": [],
                "directives": []
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * ioc 容器销毁时调用\n     *\n     * @param {IoC} ioc ioc 实例\n     ",
                  "start": 1875,
                  "end": 1943,
                  "loc": {
                    "start": {
                      "line": 79,
                      "column": 4
                    },
                    "end": {
                      "line": 83,
                      "column": 7
                    }
                  }
                }
              ]
            }
          ],
          "trailingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * 元数据定义\n ",
            "start": 0,
            "end": 16,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * ioc 生命周期接口\n *\n * @interface\n ",
            "start": 18,
            "end": 56,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * ioc 容器配置\n *\n * @typedef {Object} IoCConfig\n *\n * @property {Function} [config.loader=require] 符合 AMD 规范的模块加载器，默认为全局的 require\n * @property {Object.<string, ComponentConfig>} [config.components]\n * 批量组件配置, 其中每个key 为组件 id，值为构建配置对象。\n *\n * @property {ILifeCircleHook[]} [config.plugins] ioc 插件\n * @property {boolean} [config.skipCheckingCircularDep=false] 是否跳过循环依赖检测\n ",
            "start": 1979,
            "end": 2351,
            "loc": {
              "start": {
                "line": 88,
                "column": 0
              },
              "end": {
                "line": 99,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * 组件配置对象\n *\n * @typedef {Object} ComponentConfig\n *\n * @property {Function|string} creator 创建组件的函数或模块名称\n * @property {boolean} [isFactory=false] 是否为工厂函数，默认false，会通过 new 方式调用，true 时直接调用\n * @property {('transient'|'singleton'|'static')} [scope='transient']\n * 组件作用域，默认为 transient，每次获取组件，都会新建一个实例返回，若为 singleton，则会返回同一个实例，若为 static，则直接返回creator\n * @property {DependencyConfig[]} args 传递给组件构造函数的参数，\n * 获取组件时，根据 args 的配置，自动创建其依赖，作为构造函数参数传入\n * @property {Object.<string, DependencyConfig>} [properties] 附加给组件实例的属性，\n * 获取组件时，IoC 会根据 properties 的配置，自动创建其依赖， 作为属性注入组件实例。\n * **note:** 若组件实例存在 ```set + 属性名首字母大些的方法```，则会调用此方法，并将依赖传入，\n * 否则简单的调用 ```this.{propertyName} = {property}```\n * @property {AopConfig} [aopConfig] aop 配置对象，内置aop机制会读取该配置进行相关的拦截。\n ",
            "start": 2353,
            "end": 3102,
            "loc": {
              "start": {
                "line": 101,
                "column": 0
              },
              "end": {
                "line": 117,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * 组件依赖配置对象，用于配置组件的依赖，若未配置$ref与$import，则本身作为依赖值，否则将根据$ref/$import的声明查找依赖。\n *\n * @typedef {* | Object} DependencyConfig\n *\n * @property {string} $ref 声明依赖的组件，获取组件时，会自动创建其声明的依赖组件并注入\n * @property {string} $import 导入指定组件的配置，将创建一个匿名组件配置，其余的配置将覆盖掉导入的配置\n * @property {DependencyConfig[]} $list 声明数组形式的依赖，获取组件时，会创建一个数组，数组元素根据其对应$list中所声明的配置进行创建\n * @property {Object<string, DependencyConfig>} $map 声明对象（映射表）形式的依赖，获取组件时，会创建一个对象，\n * 对象的属性根据其对应$map中所声明的配置进行创建\n ",
            "start": 3104,
            "end": 3560,
            "loc": {
              "start": {
                "line": 119,
                "column": 0
              },
              "end": {
                "line": 129,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @typedef {Object} AopConfig\n *\n * @property {Advisor} advisors 切面配置数组，每个元素都是一个切面，\n * 切面是通知和切点的结合, 通知和切点共同定义了切面的全部内容 - 是什么, 在何时和何处完成功能.\n *\n * @property {('object'|'class')} [proxyTarget='object'] 拦截目标，默认为 'object'，\n * 设置为 'object' 会基于对象实例进行拦截，设置为'class'则基于类拦截，两者区别见：https://github.com/ecomfe/uioc/issues/69\n ",
            "start": 3562,
            "end": 3878,
            "loc": {
              "start": {
                "line": 131,
                "column": 0
              },
              "end": {
                "line": 139,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @typedef {Object} Advisor\n *\n * @property {string | Function | RegExp} matcher 切点（连接点筛选）功能, 为 string, RegExp, Function 三个类型之一,\n * 指定符合匹配条件的方法才应用特定的拦截/通知逻辑\n * @property {Object} advices 通知对象, 拥有 before, afterReturning, afterThrowing, after, around 中一个或多个方法；\n *\n * 详见：https://github.com/ecomfe/aop/blob/develop/README.md#切面aspectadvisor\n *\n * before: 在函数/方法执行前调用指定逻辑\n *\n * after: 在函数/方法执行后调用指定逻辑, 无论函数/方法是否执行成功\n *\n * afterReturning: 在函数/方法执行成功后调用指定逻辑\n *\n * afterThrowing: 在方法抛出异常后调用指定逻辑\n *\n * around: 在函数/方法调用之前和调用之后执行自定义的指定逻辑\n *\n ",
            "start": 3880,
            "end": 4418,
            "loc": {
              "start": {
                "line": 141,
                "column": 0
              },
              "end": {
                "line": 160,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * 元数据定义\n ",
      "start": 0,
      "end": 16,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * ioc 生命周期接口\n *\n * @interface\n ",
      "start": 18,
      "end": 56,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 插件名称\n     *\n     * @type {string}\n     ",
      "start": 85,
      "end": 137,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 容器实例化时调用，传入 ioc 容器和当前配置作为参数, 可以在此拦截容器级的配置，\n     * 返回一个新的容器级配置提供给 ioc 使用, ioc将基于新的配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {IoCConfig} iocConfig 容器配置\n     *\n     * @return {IoCConfig} 扩展后的 ioc 容器配置\n     ",
      "start": 215,
      "end": 450,
      "loc": {
        "start": {
          "line": 20,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 注册组件时调用，传入 ioc 容器，当前组件 id ，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前待添加的组件 id\n     * @param {ComponentConfig} componentConfig 当前待添加的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
      "start": 495,
      "end": 793,
      "loc": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 获取组件时调用，传入 ioc 容器，当前组件 id，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前要获取的组件 id\n     * @param {ComponentConfig} componentConfig 当前要获取的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
      "start": 856,
      "end": 1153,
      "loc": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 创建组件实例前调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例(可能没有)，\n     * 返回一个值为实例的 promise 给 ioc 使用，若不想覆盖现有实例，则直接返回一个 Promise<instance>。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} [instance] 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
      "start": 1216,
      "end": 1506,
      "loc": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 创建组件实例后调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例，\n     * 返回一个值为实例的 promise 给 ioc 使用。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} instance 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
      "start": 1568,
      "end": 1814,
      "loc": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * ioc 容器销毁时调用\n     *\n     * @param {IoC} ioc ioc 实例\n     ",
      "start": 1875,
      "end": 1943,
      "loc": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * ioc 容器配置\n *\n * @typedef {Object} IoCConfig\n *\n * @property {Function} [config.loader=require] 符合 AMD 规范的模块加载器，默认为全局的 require\n * @property {Object.<string, ComponentConfig>} [config.components]\n * 批量组件配置, 其中每个key 为组件 id，值为构建配置对象。\n *\n * @property {ILifeCircleHook[]} [config.plugins] ioc 插件\n * @property {boolean} [config.skipCheckingCircularDep=false] 是否跳过循环依赖检测\n ",
      "start": 1979,
      "end": 2351,
      "loc": {
        "start": {
          "line": 88,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * 组件配置对象\n *\n * @typedef {Object} ComponentConfig\n *\n * @property {Function|string} creator 创建组件的函数或模块名称\n * @property {boolean} [isFactory=false] 是否为工厂函数，默认false，会通过 new 方式调用，true 时直接调用\n * @property {('transient'|'singleton'|'static')} [scope='transient']\n * 组件作用域，默认为 transient，每次获取组件，都会新建一个实例返回，若为 singleton，则会返回同一个实例，若为 static，则直接返回creator\n * @property {DependencyConfig[]} args 传递给组件构造函数的参数，\n * 获取组件时，根据 args 的配置，自动创建其依赖，作为构造函数参数传入\n * @property {Object.<string, DependencyConfig>} [properties] 附加给组件实例的属性，\n * 获取组件时，IoC 会根据 properties 的配置，自动创建其依赖， 作为属性注入组件实例。\n * **note:** 若组件实例存在 ```set + 属性名首字母大些的方法```，则会调用此方法，并将依赖传入，\n * 否则简单的调用 ```this.{propertyName} = {property}```\n * @property {AopConfig} [aopConfig] aop 配置对象，内置aop机制会读取该配置进行相关的拦截。\n ",
      "start": 2353,
      "end": 3102,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 117,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * 组件依赖配置对象，用于配置组件的依赖，若未配置$ref与$import，则本身作为依赖值，否则将根据$ref/$import的声明查找依赖。\n *\n * @typedef {* | Object} DependencyConfig\n *\n * @property {string} $ref 声明依赖的组件，获取组件时，会自动创建其声明的依赖组件并注入\n * @property {string} $import 导入指定组件的配置，将创建一个匿名组件配置，其余的配置将覆盖掉导入的配置\n * @property {DependencyConfig[]} $list 声明数组形式的依赖，获取组件时，会创建一个数组，数组元素根据其对应$list中所声明的配置进行创建\n * @property {Object<string, DependencyConfig>} $map 声明对象（映射表）形式的依赖，获取组件时，会创建一个对象，\n * 对象的属性根据其对应$map中所声明的配置进行创建\n ",
      "start": 3104,
      "end": 3560,
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 129,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} AopConfig\n *\n * @property {Advisor} advisors 切面配置数组，每个元素都是一个切面，\n * 切面是通知和切点的结合, 通知和切点共同定义了切面的全部内容 - 是什么, 在何时和何处完成功能.\n *\n * @property {('object'|'class')} [proxyTarget='object'] 拦截目标，默认为 'object'，\n * 设置为 'object' 会基于对象实例进行拦截，设置为'class'则基于类拦截，两者区别见：https://github.com/ecomfe/uioc/issues/69\n ",
      "start": 3562,
      "end": 3878,
      "loc": {
        "start": {
          "line": 131,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Advisor\n *\n * @property {string | Function | RegExp} matcher 切点（连接点筛选）功能, 为 string, RegExp, Function 三个类型之一,\n * 指定符合匹配条件的方法才应用特定的拦截/通知逻辑\n * @property {Object} advices 通知对象, 拥有 before, afterReturning, afterThrowing, after, around 中一个或多个方法；\n *\n * 详见：https://github.com/ecomfe/aop/blob/develop/README.md#切面aspectadvisor\n *\n * before: 在函数/方法执行前调用指定逻辑\n *\n * after: 在函数/方法执行后调用指定逻辑, 无论函数/方法是否执行成功\n *\n * afterReturning: 在函数/方法执行成功后调用指定逻辑\n *\n * afterThrowing: 在方法抛出异常后调用指定逻辑\n *\n * around: 在函数/方法调用之前和调用之后执行自定义的指定逻辑\n *\n ",
      "start": 3880,
      "end": 4418,
      "loc": {
        "start": {
          "line": 141,
          "column": 0
        },
        "end": {
          "line": 160,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * 元数据定义\n ",
      "start": 0,
      "end": 16,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * ioc 生命周期接口\n *\n * @interface\n ",
      "start": 18,
      "end": 56,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 57,
      "end": 62,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ILifeCircleHook",
      "start": 63,
      "end": 78,
      "loc": {
        "start": {
          "line": 10,
          "column": 6
        },
        "end": {
          "line": 10,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 79,
      "end": 80,
      "loc": {
        "start": {
          "line": 10,
          "column": 22
        },
        "end": {
          "line": 10,
          "column": 23
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 插件名称\n     *\n     * @type {string}\n     ",
      "start": 85,
      "end": 137,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "get",
      "start": 142,
      "end": 145,
      "loc": {
        "start": {
          "line": 16,
          "column": 4
        },
        "end": {
          "line": 16,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "name",
      "start": 146,
      "end": 150,
      "loc": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 16,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 150,
      "end": 151,
      "loc": {
        "start": {
          "line": 16,
          "column": 12
        },
        "end": {
          "line": 16,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 151,
      "end": 152,
      "loc": {
        "start": {
          "line": 16,
          "column": 13
        },
        "end": {
          "line": 16,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 153,
      "end": 154,
      "loc": {
        "start": {
          "line": 16,
          "column": 15
        },
        "end": {
          "line": 16,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "throw",
        "keyword": "throw",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "throw",
      "start": 163,
      "end": 168,
      "loc": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 17,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 169,
      "end": 172,
      "loc": {
        "start": {
          "line": 17,
          "column": 14
        },
        "end": {
          "line": 17,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Error",
      "start": 173,
      "end": 178,
      "loc": {
        "start": {
          "line": 17,
          "column": 18
        },
        "end": {
          "line": 17,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 178,
      "end": 179,
      "loc": {
        "start": {
          "line": 17,
          "column": 23
        },
        "end": {
          "line": 17,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "need to be implement",
      "start": 179,
      "end": 201,
      "loc": {
        "start": {
          "line": 17,
          "column": 24
        },
        "end": {
          "line": 17,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 201,
      "end": 202,
      "loc": {
        "start": {
          "line": 17,
          "column": 46
        },
        "end": {
          "line": 17,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 202,
      "end": 203,
      "loc": {
        "start": {
          "line": 17,
          "column": 47
        },
        "end": {
          "line": 17,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 208,
      "end": 209,
      "loc": {
        "start": {
          "line": 18,
          "column": 4
        },
        "end": {
          "line": 18,
          "column": 5
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 容器实例化时调用，传入 ioc 容器和当前配置作为参数, 可以在此拦截容器级的配置，\n     * 返回一个新的容器级配置提供给 ioc 使用, ioc将基于新的配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {IoCConfig} iocConfig 容器配置\n     *\n     * @return {IoCConfig} 扩展后的 ioc 容器配置\n     ",
      "start": 215,
      "end": 450,
      "loc": {
        "start": {
          "line": 20,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "onContainerInit",
      "start": 455,
      "end": 470,
      "loc": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 29,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 470,
      "end": 471,
      "loc": {
        "start": {
          "line": 29,
          "column": 19
        },
        "end": {
          "line": 29,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 471,
      "end": 474,
      "loc": {
        "start": {
          "line": 29,
          "column": 20
        },
        "end": {
          "line": 29,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 474,
      "end": 475,
      "loc": {
        "start": {
          "line": 29,
          "column": 23
        },
        "end": {
          "line": 29,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iocConfig",
      "start": 476,
      "end": 485,
      "loc": {
        "start": {
          "line": 29,
          "column": 25
        },
        "end": {
          "line": 29,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 485,
      "end": 486,
      "loc": {
        "start": {
          "line": 29,
          "column": 34
        },
        "end": {
          "line": 29,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 487,
      "end": 488,
      "loc": {
        "start": {
          "line": 29,
          "column": 36
        },
        "end": {
          "line": 29,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 488,
      "end": 489,
      "loc": {
        "start": {
          "line": 29,
          "column": 37
        },
        "end": {
          "line": 29,
          "column": 38
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 注册组件时调用，传入 ioc 容器，当前组件 id ，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前待添加的组件 id\n     * @param {ComponentConfig} componentConfig 当前待添加的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
      "start": 495,
      "end": 793,
      "loc": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 40,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "onAddComponent",
      "start": 798,
      "end": 812,
      "loc": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 812,
      "end": 813,
      "loc": {
        "start": {
          "line": 41,
          "column": 18
        },
        "end": {
          "line": 41,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 813,
      "end": 816,
      "loc": {
        "start": {
          "line": 41,
          "column": 19
        },
        "end": {
          "line": 41,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 816,
      "end": 817,
      "loc": {
        "start": {
          "line": 41,
          "column": 22
        },
        "end": {
          "line": 41,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentId",
      "start": 818,
      "end": 829,
      "loc": {
        "start": {
          "line": 41,
          "column": 24
        },
        "end": {
          "line": 41,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 829,
      "end": 830,
      "loc": {
        "start": {
          "line": 41,
          "column": 35
        },
        "end": {
          "line": 41,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentConfig",
      "start": 831,
      "end": 846,
      "loc": {
        "start": {
          "line": 41,
          "column": 37
        },
        "end": {
          "line": 41,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 846,
      "end": 847,
      "loc": {
        "start": {
          "line": 41,
          "column": 52
        },
        "end": {
          "line": 41,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 848,
      "end": 849,
      "loc": {
        "start": {
          "line": 41,
          "column": 54
        },
        "end": {
          "line": 41,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 849,
      "end": 850,
      "loc": {
        "start": {
          "line": 41,
          "column": 55
        },
        "end": {
          "line": 41,
          "column": 56
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 获取组件时调用，传入 ioc 容器，当前组件 id，可以在此拦截组件级的配置，\n     * 返回一个新的组件配置提供给 ioc 使用，ioc 将基于此配置做后续操作。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前要获取的组件 id\n     * @param {ComponentConfig} componentConfig 当前要获取的组件配置\n     *\n     * @return {ComponentConfig} 扩展后的组件配置\n     ",
      "start": 856,
      "end": 1153,
      "loc": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "onGetComponent",
      "start": 1158,
      "end": 1172,
      "loc": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1172,
      "end": 1173,
      "loc": {
        "start": {
          "line": 53,
          "column": 18
        },
        "end": {
          "line": 53,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 1173,
      "end": 1176,
      "loc": {
        "start": {
          "line": 53,
          "column": 19
        },
        "end": {
          "line": 53,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1176,
      "end": 1177,
      "loc": {
        "start": {
          "line": 53,
          "column": 22
        },
        "end": {
          "line": 53,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentId",
      "start": 1178,
      "end": 1189,
      "loc": {
        "start": {
          "line": 53,
          "column": 24
        },
        "end": {
          "line": 53,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1189,
      "end": 1190,
      "loc": {
        "start": {
          "line": 53,
          "column": 35
        },
        "end": {
          "line": 53,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentConfig",
      "start": 1191,
      "end": 1206,
      "loc": {
        "start": {
          "line": 53,
          "column": 37
        },
        "end": {
          "line": 53,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1206,
      "end": 1207,
      "loc": {
        "start": {
          "line": 53,
          "column": 52
        },
        "end": {
          "line": 53,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1208,
      "end": 1209,
      "loc": {
        "start": {
          "line": 53,
          "column": 54
        },
        "end": {
          "line": 53,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1209,
      "end": 1210,
      "loc": {
        "start": {
          "line": 53,
          "column": 55
        },
        "end": {
          "line": 53,
          "column": 56
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 创建组件实例前调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例(可能没有)，\n     * 返回一个值为实例的 promise 给 ioc 使用，若不想覆盖现有实例，则直接返回一个 Promise<instance>。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} [instance] 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
      "start": 1216,
      "end": 1506,
      "loc": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "beforeCreateInstance",
      "start": 1511,
      "end": 1531,
      "loc": {
        "start": {
          "line": 65,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1531,
      "end": 1532,
      "loc": {
        "start": {
          "line": 65,
          "column": 24
        },
        "end": {
          "line": 65,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 1532,
      "end": 1535,
      "loc": {
        "start": {
          "line": 65,
          "column": 25
        },
        "end": {
          "line": 65,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1535,
      "end": 1536,
      "loc": {
        "start": {
          "line": 65,
          "column": 28
        },
        "end": {
          "line": 65,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentId",
      "start": 1537,
      "end": 1548,
      "loc": {
        "start": {
          "line": 65,
          "column": 30
        },
        "end": {
          "line": 65,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1548,
      "end": 1549,
      "loc": {
        "start": {
          "line": 65,
          "column": 41
        },
        "end": {
          "line": 65,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "instance",
      "start": 1550,
      "end": 1558,
      "loc": {
        "start": {
          "line": 65,
          "column": 43
        },
        "end": {
          "line": 65,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1558,
      "end": 1559,
      "loc": {
        "start": {
          "line": 65,
          "column": 51
        },
        "end": {
          "line": 65,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1560,
      "end": 1561,
      "loc": {
        "start": {
          "line": 65,
          "column": 53
        },
        "end": {
          "line": 65,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1561,
      "end": 1562,
      "loc": {
        "start": {
          "line": 65,
          "column": 54
        },
        "end": {
          "line": 65,
          "column": 55
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * 创建组件实例后调用，传入 ioc 容器，当前组件 id，和当前已经创建的实例，\n     * 返回一个值为实例的 promise 给 ioc 使用。\n     *\n     * @param {IoC} ioc ioc 实例\n     * @param {string} componentId  当前组件 id\n     * @param {*} instance 当前已创建的实例\n     *\n     * @return {Promise<*>}\n     ",
      "start": 1568,
      "end": 1814,
      "loc": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "afterCreateInstance",
      "start": 1819,
      "end": 1838,
      "loc": {
        "start": {
          "line": 77,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1838,
      "end": 1839,
      "loc": {
        "start": {
          "line": 77,
          "column": 23
        },
        "end": {
          "line": 77,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 1839,
      "end": 1842,
      "loc": {
        "start": {
          "line": 77,
          "column": 24
        },
        "end": {
          "line": 77,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1842,
      "end": 1843,
      "loc": {
        "start": {
          "line": 77,
          "column": 27
        },
        "end": {
          "line": 77,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "componentId",
      "start": 1844,
      "end": 1855,
      "loc": {
        "start": {
          "line": 77,
          "column": 29
        },
        "end": {
          "line": 77,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1855,
      "end": 1856,
      "loc": {
        "start": {
          "line": 77,
          "column": 40
        },
        "end": {
          "line": 77,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "instance",
      "start": 1857,
      "end": 1865,
      "loc": {
        "start": {
          "line": 77,
          "column": 42
        },
        "end": {
          "line": 77,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1865,
      "end": 1866,
      "loc": {
        "start": {
          "line": 77,
          "column": 50
        },
        "end": {
          "line": 77,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1867,
      "end": 1868,
      "loc": {
        "start": {
          "line": 77,
          "column": 52
        },
        "end": {
          "line": 77,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1868,
      "end": 1869,
      "loc": {
        "start": {
          "line": 77,
          "column": 53
        },
        "end": {
          "line": 77,
          "column": 54
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * ioc 容器销毁时调用\n     *\n     * @param {IoC} ioc ioc 实例\n     ",
      "start": 1875,
      "end": 1943,
      "loc": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "onContainerDispose",
      "start": 1948,
      "end": 1966,
      "loc": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 84,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1966,
      "end": 1967,
      "loc": {
        "start": {
          "line": 84,
          "column": 22
        },
        "end": {
          "line": 84,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ioc",
      "start": 1967,
      "end": 1970,
      "loc": {
        "start": {
          "line": 84,
          "column": 23
        },
        "end": {
          "line": 84,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1970,
      "end": 1971,
      "loc": {
        "start": {
          "line": 84,
          "column": 26
        },
        "end": {
          "line": 84,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1972,
      "end": 1973,
      "loc": {
        "start": {
          "line": 84,
          "column": 28
        },
        "end": {
          "line": 84,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1973,
      "end": 1974,
      "loc": {
        "start": {
          "line": 84,
          "column": 29
        },
        "end": {
          "line": 84,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1975,
      "end": 1976,
      "loc": {
        "start": {
          "line": 85,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * ioc 容器配置\n *\n * @typedef {Object} IoCConfig\n *\n * @property {Function} [config.loader=require] 符合 AMD 规范的模块加载器，默认为全局的 require\n * @property {Object.<string, ComponentConfig>} [config.components]\n * 批量组件配置, 其中每个key 为组件 id，值为构建配置对象。\n *\n * @property {ILifeCircleHook[]} [config.plugins] ioc 插件\n * @property {boolean} [config.skipCheckingCircularDep=false] 是否跳过循环依赖检测\n ",
      "start": 1979,
      "end": 2351,
      "loc": {
        "start": {
          "line": 88,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * 组件配置对象\n *\n * @typedef {Object} ComponentConfig\n *\n * @property {Function|string} creator 创建组件的函数或模块名称\n * @property {boolean} [isFactory=false] 是否为工厂函数，默认false，会通过 new 方式调用，true 时直接调用\n * @property {('transient'|'singleton'|'static')} [scope='transient']\n * 组件作用域，默认为 transient，每次获取组件，都会新建一个实例返回，若为 singleton，则会返回同一个实例，若为 static，则直接返回creator\n * @property {DependencyConfig[]} args 传递给组件构造函数的参数，\n * 获取组件时，根据 args 的配置，自动创建其依赖，作为构造函数参数传入\n * @property {Object.<string, DependencyConfig>} [properties] 附加给组件实例的属性，\n * 获取组件时，IoC 会根据 properties 的配置，自动创建其依赖， 作为属性注入组件实例。\n * **note:** 若组件实例存在 ```set + 属性名首字母大些的方法```，则会调用此方法，并将依赖传入，\n * 否则简单的调用 ```this.{propertyName} = {property}```\n * @property {AopConfig} [aopConfig] aop 配置对象，内置aop机制会读取该配置进行相关的拦截。\n ",
      "start": 2353,
      "end": 3102,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 117,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * 组件依赖配置对象，用于配置组件的依赖，若未配置$ref与$import，则本身作为依赖值，否则将根据$ref/$import的声明查找依赖。\n *\n * @typedef {* | Object} DependencyConfig\n *\n * @property {string} $ref 声明依赖的组件，获取组件时，会自动创建其声明的依赖组件并注入\n * @property {string} $import 导入指定组件的配置，将创建一个匿名组件配置，其余的配置将覆盖掉导入的配置\n * @property {DependencyConfig[]} $list 声明数组形式的依赖，获取组件时，会创建一个数组，数组元素根据其对应$list中所声明的配置进行创建\n * @property {Object<string, DependencyConfig>} $map 声明对象（映射表）形式的依赖，获取组件时，会创建一个对象，\n * 对象的属性根据其对应$map中所声明的配置进行创建\n ",
      "start": 3104,
      "end": 3560,
      "loc": {
        "start": {
          "line": 119,
          "column": 0
        },
        "end": {
          "line": 129,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} AopConfig\n *\n * @property {Advisor} advisors 切面配置数组，每个元素都是一个切面，\n * 切面是通知和切点的结合, 通知和切点共同定义了切面的全部内容 - 是什么, 在何时和何处完成功能.\n *\n * @property {('object'|'class')} [proxyTarget='object'] 拦截目标，默认为 'object'，\n * 设置为 'object' 会基于对象实例进行拦截，设置为'class'则基于类拦截，两者区别见：https://github.com/ecomfe/uioc/issues/69\n ",
      "start": 3562,
      "end": 3878,
      "loc": {
        "start": {
          "line": 131,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Advisor\n *\n * @property {string | Function | RegExp} matcher 切点（连接点筛选）功能, 为 string, RegExp, Function 三个类型之一,\n * 指定符合匹配条件的方法才应用特定的拦截/通知逻辑\n * @property {Object} advices 通知对象, 拥有 before, afterReturning, afterThrowing, after, around 中一个或多个方法；\n *\n * 详见：https://github.com/ecomfe/aop/blob/develop/README.md#切面aspectadvisor\n *\n * before: 在函数/方法执行前调用指定逻辑\n *\n * after: 在函数/方法执行后调用指定逻辑, 无论函数/方法是否执行成功\n *\n * afterReturning: 在函数/方法执行成功后调用指定逻辑\n *\n * afterThrowing: 在方法抛出异常后调用指定逻辑\n *\n * around: 在函数/方法调用之前和调用之后执行自定义的指定逻辑\n *\n ",
      "start": 3880,
      "end": 4418,
      "loc": {
        "start": {
          "line": 141,
          "column": 0
        },
        "end": {
          "line": 160,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4419,
      "end": 4419,
      "loc": {
        "start": {
          "line": 161,
          "column": 0
        },
        "end": {
          "line": 161,
          "column": 0
        }
      }
    }
  ]
}